{"ast":null,"code":"var _jsxFileName = \"D:\\\\Huy\\\\orther\\\\3. RJS301x_1.0-A_VN\\\\Process\\\\Routing Part 2\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport const action = async (request, params) => {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not send data!\"\n    }, {\n      status: 500\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["D:/Huy/orther/3. RJS301x_1.0-A_VN/Process/Routing Part 2/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { json } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nconst NewEventPage = () => {\r\n  return <EventForm />;\r\n};\r\nexport default NewEventPage;\r\n\r\nexport const action = async (request, params) => {\r\n  const data = await request.formData();\r\n  const eventData = {\r\n    title: data.get(\"title\"),\r\n    image: data.get(\"image\"),\r\n    date: data.get(\"date\"),\r\n    description: data.get(\"description\"),\r\n  };\r\n\r\n  const response = await fetch(\"http://localhost:8080/events\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(eventData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not send data!\" }, { status: 500 });\r\n  }\r\n};\r\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACtB,CAAC;AAACC,EAAA,GAFIL,YAAY;AAGlB,eAAeA,YAAY;AAE3B,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,KAAK;EAC/C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM5B,IAAI,CAAC;MAAE6B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAClE;AACF,CAAC;AAAC,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}